{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false,\n      errorMessage: ''\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        isLoading: true\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files);\n        });\n      }, 1000);\n    };\n\n    this.sendImage = () => {\n      let formData = new FormData();\n      formData.append('picture', this.state.files[0], this.state.files[0].name);\n      axios.post('http://localhost:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        console.log(resp);\n      }).catch(err => {\n        this.setState({\n          errorMessage: err\n        });\n      });\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/png, image/jpeg\",\n        children: ({\n          isDragActive,\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'dropzone back'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-image mb-2 text-muted\",\n              style: {\n                fontSize: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: isDragActive ? \"Rasim yuklanmoqda\" : \"Bironta rasim yuklang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            className: \"mt-4\",\n            size: \"lg\",\n            onClick: this.sendImage,\n            children: \"Yubormoq\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","Button","axios","Classifier","state","files","isLoading","errorMessage","onDrop","setState","loadImage","setTimeout","console","log","sendImage","formData","FormData","append","name","post","headers","then","resp","catch","err","render","map","file","size","isDragActive","getRootProps","getInputProps","className","fontSize","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css'\nimport {Spinner, Button} from 'react-bootstrap'\nimport axios from 'axios'\n\n\nexport default class Classifier extends Component {\n    state={\n        files: [],\n        isLoading: false,\n        errorMessage:'',\n    }\n    // componentDidMount(){\n    //     this.getImages()\n    // }\n\n    // getImages = ()=>{\n    //     axios.get('http://localhost:8000/api/images/',{\n    //         headers:{\n    //             'accept':'application/json'\n    //         }\n    //     }).then(resp =>{\n    //         console.log(resp)\n    //     })\n        \n    // }\n\n\n    onDrop = (files) =>{\n        this.setState({isLoading:true})\n        this.loadImage(files)\n    }\n    loadImage = (files)=>{\n        setTimeout(()=>{\n            this.setState({\n                files,\n                isLoading:false\n            },()=>{\n                console.log(this.state.files)\n            }\n            )  \n        },1000);\n    }\n\n    sendImage = ()=>{\n        let formData = new FormData()\n        formData.append('picture', this.state.files[0],this.state.files[0].name)\n        axios.post('http://localhost:8000/api/images/',formData,{\n            headers:{\n                'accept':'application/json',\n                'content-type':'multipart/form-data'\n            }\n        }).then(resp=>{\n            console.log(resp)\n        }).catch(err=>{\n            this.setState({errorMessage:err})\n        })\n\n        \n    }\n    render() {\n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n            </li>\n          ));\n        return (\n            <div>\n                <Dropzone onDrop={this.onDrop}  accept='image/png, image/jpeg'>\n                    {({isDragActive, getRootProps, getInputProps}) => (\n                    <section className=\"container\">\n                        <div {...getRootProps({className: 'dropzone back'})}>\n                        <input {...getInputProps()} />\n                        <i className='far fa-image mb-2 text-muted' style={{fontSize:100}}></i>\n                        <p className='text-muted'>{isDragActive ? \"Rasim yuklanmoqda\" :\"Bironta rasim yuklang\"}</p>\n                        </div>\n                        <aside>\n                        {files}\n                        </aside>\n                        {this.state.files.length > 0 && (\n                            <Button variant='info' className='mt-4' size='lg' onClick={this.sendImage}>Yubormoq</Button>\n                        )}\n                        {this.state.isLoading && (\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\"></span>\n                            </Spinner>\n                        )}\n                        \n                    </section>\n                    )}\n                </Dropzone>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}