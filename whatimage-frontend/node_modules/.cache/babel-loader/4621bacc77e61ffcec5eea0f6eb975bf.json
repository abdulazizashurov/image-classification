{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button, Alert, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false,\n      errorMessage: '',\n      resentImage: null\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        files: [],\n        isLoading: true,\n        resentImage: null\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files);\n        });\n      }, 1000);\n    };\n\n    this.activateSpinner = () => {\n      this.setState({\n        files: [],\n        isLoading: true\n      });\n    };\n\n    this.deactivateSpinner = () => {\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.sendImage = () => {\n      this.activateSpinner();\n      let formData = new FormData();\n      formData.append('picture', this.state.files[0], this.state.files[0].name);\n      axios.post('http://localhost:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        this.getImageClass(resp);\n      }).catch(err => {\n        this.setState({\n          errorMessage: err.message\n        });\n      });\n    };\n\n    this.getImageClass = obj => {\n      axios.get(`http://localhost:8000/api/images/${obj.data.id}/`, {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          resentImage: resp\n        });\n      }).catch(err => {\n        this.setState({\n          errorMessage: err.message\n        });\n      });\n      this.deactivateSpinner();\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/png, image/jpeg\",\n        children: ({\n          isDragActive,\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'dropzone back'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-image mb-2 text-muted\",\n              style: {\n                fontSize: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: isDragActive ? \"Rasim yuklanmoqda\" : \"Bironta rasim yuklang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), this.state.errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: this.state.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            className: \"mt-4\",\n            size: \"lg\",\n            onClick: this.sendImage,\n            children: \"Yubormoq\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), this.state.resentImage && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"primary\",\n              children: [\"Javob:  \", this.state.resentImage.data.classified]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: \"justify-content-center\",\n              src: this.state.resentImage.data.picture,\n              height: \"200\",\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","Button","Alert","Image","axios","Classifier","state","files","isLoading","errorMessage","resentImage","onDrop","setState","loadImage","setTimeout","console","log","activateSpinner","deactivateSpinner","sendImage","formData","FormData","append","name","post","headers","then","resp","getImageClass","catch","err","message","obj","get","data","id","render","map","file","size","isDragActive","getRootProps","getInputProps","className","fontSize","length","classified","picture"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css'\nimport {Spinner, Button,Alert,Image} from 'react-bootstrap'\nimport axios from 'axios'\n\n\nexport default class Classifier extends Component {\n    state={\n        files: [],\n        isLoading: false,\n        errorMessage:'',\n        resentImage:null\n    }\n\n\n    onDrop = (files) =>{\n        this.setState({files:[],isLoading:true,resentImage:null})\n        this.loadImage(files)\n    }\n    loadImage = (files)=>{\n        setTimeout(()=>{\n            this.setState({\n                files,\n                isLoading:false\n            },()=>{\n                console.log(this.state.files)\n            }\n            )  \n        },1000);\n    }\n    activateSpinner = ()=>{\n        this.setState({files:[],isLoading:true})\n    }\n    deactivateSpinner = ()=>{\n        this.setState({isLoading:false})\n    }\n\n    sendImage = ()=>{\n        this.activateSpinner()\n        let formData = new FormData()\n        formData.append('picture', this.state.files[0],this.state.files[0].name)\n        axios.post('http://localhost:8000/api/images/',formData,{\n            headers:{\n                'accept':'application/json',\n                'content-type':'multipart/form-data'\n            }\n        }).then(resp=>{\n            this.getImageClass(resp)\n        }).catch(err=>{\n            this.setState({errorMessage:err.message})\n        })\n\n        \n    }\n\n    getImageClass = (obj)=>{\n        axios.get(`http://localhost:8000/api/images/${obj.data.id}/`,{\n            headers:{\n                'accept':'application/json',\n            }\n        })\n        .then(resp=>{\n            this.setState({resentImage:resp})\n        })\n        .catch(err=>{\n            this.setState({errorMessage:err.message})\n        })\n        this.deactivateSpinner()\n    }\n\n\n    render() {\n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n            </li>\n          ));\n        return (\n            <div>\n                <Dropzone onDrop={this.onDrop}  accept='image/png, image/jpeg'>\n                    {({isDragActive, getRootProps, getInputProps}) => (\n                    <section className=\"container\">\n                        <div {...getRootProps({className: 'dropzone back'})}>\n                        <input {...getInputProps()} />\n                        <i className='far fa-image mb-2 text-muted' style={{fontSize:100}}></i>\n                        <p className='text-muted'>{isDragActive ? \"Rasim yuklanmoqda\" :\"Bironta rasim yuklang\"}</p>\n                        </div>\n                        <aside>\n                        {files}\n                        </aside>\n                        {this.state.errorMessage && (\n                            <Alert variant='danger'>\n                                {this.state.errorMessage}\n                            </Alert>\n                        )}\n                       \n\n                        {this.state.files.length > 0 && (\n                            <Button variant='info' className='mt-4' size='lg' onClick={this.sendImage}>Yubormoq</Button>\n                        )}\n                        {this.state.isLoading && (\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\"></span>\n                            </Spinner>\n                        )}\n                        {this.state.resentImage &&(\n                            <React.Fragment>\n                                <Alert variant='primary'>\n                                Javob:  {this.state.resentImage.data.classified}\n                                </Alert>\n{/* \n                                <Alert variant='info'>\n                                    <a href={`https://www.google.com/search?q=${this.state.resentImage.data.classified}`}>{this.state.resentImage.data.classified} nima ?</a>\n                                </Alert> */}\n\n                                <Image className='justify-content-center' src={this.state.resentImage.data.picture} height='200' rounded />\n                            </React.Fragment>\n                        )}\n                        \n                    </section>\n                    )}\n                </Dropzone>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}