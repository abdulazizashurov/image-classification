{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false\n    };\n\n    this.getImage = () => {\n      axios.get('localhost:8000/api/images/', {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        console.log(resp);\n      });\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        isLoading: true\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        });\n      }, 1000);\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/png, image/jpeg\",\n        children: ({\n          isDragActive,\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'dropzone back'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-image mb-2 text-muted\",\n              style: {\n                fontSize: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: isDragActive ? \"Rasim yuklanmoqda\" : \"Bironta rasim yuklang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abdulazizashurov/Desktop/whatimage/whatimage-frontend/src/components/Classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","axios","Classifier","state","files","isLoading","getImage","get","headers","then","resp","console","log","onDrop","setState","loadImage","setTimeout","render","map","file","name","size","isDragActive","getRootProps","getInputProps","className","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kBAAP;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CK,KAD8C,GACxC;AACFC,MAAAA,KAAK,EAAE,EADL;AAEFC,MAAAA,SAAS,EAAE;AAFT,KADwC;;AAAA,SAM9CC,QAN8C,GAMnC,MAAI;AACXL,MAAAA,KAAK,CAACM,GAAN,CAAU,4BAAV,EAAuC;AACnCC,QAAAA,OAAO,EAAC;AACJ,oBAAS;AADL;AAD2B,OAAvC,EAIGC,IAJH,CAIQC,IAAI,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAND;AAQH,KAf6C;;AAAA,SAkB9CG,MAlB8C,GAkBpCT,KAAD,IAAU;AACf,WAAKU,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,WAAKU,SAAL,CAAeX,KAAf;AACH,KArB6C;;AAAA,SAsB9CW,SAtB8C,GAsBjCX,KAAD,IAAS;AACjBY,MAAAA,UAAU,CAAC,MAAI;AACX,aAAKF,QAAL,CAAc;AACVV,UAAAA,KADU;AAEVC,UAAAA,SAAS,EAAC;AAFA,SAAd;AAIH,OALS,EAKR,IALQ,CAAV;AAMH,KA7B6C;AAAA;;AA8B9CY,EAAAA,MAAM,GAAG;AACL,UAAMb,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqBC,IAAI,iBACnC;AAAA,iBACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,OAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,YADU,CAAd;AAKA,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKP,MAAvB;AAAgC,QAAA,MAAM,EAAC,uBAAvC;AAAA,kBACK,CAAC;AAACS,UAAAA,YAAD;AAAeC,UAAAA,YAAf;AAA6BC,UAAAA;AAA7B,SAAD,kBACD;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACI,oBAASD,YAAY,CAAC;AAACE,cAAAA,SAAS,EAAE;AAAZ,aAAD,CAArB;AAAA,oCACA,sBAAWD,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAG,cAAA,SAAS,EAAC,8BAAb;AAA4C,cAAA,KAAK,EAAE;AAACE,gBAAAA,QAAQ,EAAC;AAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,wBAA2BJ,YAAY,GAAG,mBAAH,GAAwB;AAA/D;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,sBACClB;AADD;AAAA;AAAA;AAAA;AAAA,kBANJ,EASK,KAAKD,KAAL,CAAWE,SAAX,iBACG,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,QAAnB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AA5D6C","sourcesContent":["import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css'\nimport {Spinner} from 'react-bootstrap'\nimport axios from 'axios'\n\n\nexport default class Classifier extends Component {\n    state={\n        files: [],\n        isLoading: false,\n    }\n\n    getImage = ()=>{\n        axios.get('localhost:8000/api/images/',{\n            headers:{\n                'accept':'application/json'\n            }\n        }).then(resp =>{\n            console.log(resp)\n        })\n        \n    }\n\n\n    onDrop = (files) =>{\n        this.setState({isLoading:true})\n        this.loadImage(files)\n    }\n    loadImage = (files)=>{\n        setTimeout(()=>{\n            this.setState({\n                files,\n                isLoading:false\n            })\n        },1000);\n    }\n    render() {\n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n            </li>\n          ));\n        return (\n            <div>\n                <Dropzone onDrop={this.onDrop}  accept='image/png, image/jpeg'>\n                    {({isDragActive, getRootProps, getInputProps}) => (\n                    <section className=\"container\">\n                        <div {...getRootProps({className: 'dropzone back'})}>\n                        <input {...getInputProps()} />\n                        <i className='far fa-image mb-2 text-muted' style={{fontSize:100}}></i>\n                        <p className='text-muted'>{isDragActive ? \"Rasim yuklanmoqda\" :\"Bironta rasim yuklang\"}</p>\n                        </div>\n                        <aside>\n                        {files}\n                        </aside>\n                        {this.state.isLoading && (\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\"></span>\n                            </Spinner>\n                        )}\n                        \n                    </section>\n                    )}\n                </Dropzone>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}